security:
    encoders: # active l'encodeur pour mdp
        App\Entity\User:
            algorithm: auto # défini une algorythme automatique
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        users_in_memory: { memory: null }
        in_database: 
            entity:
                class: App\Entity\User # Va chercher un user dans Entity de la class User
                property: username # Lien de comparaison par la propriété username
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true

            provider: in_database # = firewall, autorisation a passer la securité
            form_login:
                login_path: connexion #lien du formulaire
                check_path: connexion
            logout: 
                path: deconnexion #deconnexion
                target: bottles # redirection vers la page aliment
            lazy: true
            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
